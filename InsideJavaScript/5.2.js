function execute(param1, param2){
  var a = 1, b = 2;
  function func(){
    return a+b;
  }
  return param1 + param2 + func();
}
execute(3,4);

// 1. 활성 객체 생성
// 실행 컨텍스트가 생성되면 자바스크립트 엔진은 해당 컨텍스트에서 실행에 필요한 여러가지 정보를 담을 객체를 생성
// 이 객체를 활성 객체라 한다. 이 객체는 앞으로 사용하게 될 매개변수나 사용자가 정의한 변수 및 객체를 저장하고
// 새로 만들어진 컨텍스트로 접근 가능하게 되어 있다.

// 2. argumetns객체 생성
// 앞서 만들어진 활성 객체는 arguments 프로퍼티로 이 arguments 객체를 참조한다.

// 3. 스코프 정보 생성
// 현재 컨텍스트의 유효 범위를 나타내는 스코프 정보를 생성한다.
// 이 스코프 정보는 현재 실행 중인 실행 컨텍스트 안에서 연결리스트와 유사한 형식으로 만들어진다.
// 현재 생성된 활성 객체가 스코프 체인의 제일 앞에 추가되며, execute()함수의 인자나 지역 변수 등에 접근할 수 있다.

// 4. 변수 생성
// 현재 실행 컨텍스트 내부에서 사용되는 지역 변수의 생성이 이루어진다.(활성 객체 = 변수 객체)
// 변수 객체 안에서 호출된 함수 인자는 각각의 프로퍼티가 만들어지고 그 값이 할당된다.
// 주의할 점은 이 과정에서 변수나 내부 함수를 단지 메모리에 생성하고, 
// 초기화는 각 변수나 함수에 해당하는 표현식이 실행하기 전까지는 이루어지지 않는다.

// 5. this 바인딩

// 6. 코드 실행
// 하나의 실행 컨텍스트가 생성되고 변수 객체가 만들어진 후에 코드에 있는 여러가지 표현식 실행이 이루어진다.
// 이렇게 실행되면서 변수의 초기화 및 연산, 또 다른 함수 실행 등이 이루어진다.